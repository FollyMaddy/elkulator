# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am for Elkulator



pkgdatadir = $(datadir)/elkulator
pkgincludedir = $(includedir)/elkulator
pkglibdir = $(libdir)/elkulator
pkglibexecdir = $(libexecdir)/elkulator
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = elkulator$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_elkulator_OBJECTS = elkulator-2xsai.$(OBJEXT) \
	elkulator-1770.$(OBJEXT) elkulator-6502.$(OBJEXT) \
	elkulator-adc.$(OBJEXT) elkulator-adf.$(OBJEXT) \
	elkulator-config.$(OBJEXT) elkulator-csw.$(OBJEXT) \
	elkulator-ddnoise.$(OBJEXT) elkulator-debugger.$(OBJEXT) \
	elkulator-disc.$(OBJEXT) elkulator-fdi2raw.$(OBJEXT) \
	elkulator-fdi.$(OBJEXT) elkulator-firstbyte.$(OBJEXT) \
	elkulator-linux.$(OBJEXT) elkulator-linux-gui.$(OBJEXT) \
	elkulator-linux-keydefine.$(OBJEXT) elkulator-main.$(OBJEXT) \
	elkulator-mem.$(OBJEXT) elkulator-palfilt.$(OBJEXT) \
	elkulator-savestate.$(OBJEXT) elkulator-scale2x.$(OBJEXT) \
	elkulator-sound.$(OBJEXT) elkulator-soundopenal.$(OBJEXT) \
	elkulator-ssd.$(OBJEXT) elkulator-tapenoise.$(OBJEXT) \
	elkulator-uef.$(OBJEXT) elkulator-ula.$(OBJEXT) \
	elkulator-allegro_icon.$(OBJEXT)
elkulator_OBJECTS = $(am_elkulator_OBJECTS)
am__DEPENDENCIES_1 =
elkulator_DEPENDENCIES = $(am__DEPENDENCIES_1)
elkulator_LINK = $(CCLD) $(elkulator_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(elkulator_SOURCES)
DIST_SOURCES = $(elkulator_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/me/elkulator/missing --run aclocal-1.11
ALLEGRO_CONFIG = /usr/bin/allegro-config
AMTAR = ${SHELL} /home/me/elkulator/missing --run tar
AUTOCONF = ${SHELL} /home/me/elkulator/missing --run autoconf
AUTOHEADER = ${SHELL} /home/me/elkulator/missing --run autoheader
AUTOMAKE = ${SHELL} /home/me/elkulator/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -O3
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=none
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"Elkulator\" -DPACKAGE_TARNAME=\"elkulator\" -DPACKAGE_VERSION=\"1.0\" -DPACKAGE_STRING=\"Elkulator\ 1.0\" -DPACKAGE_BUGREPORT=\"Tom\ Walker\ \<b-em@bbcmicro.com\>\" -DPACKAGE_URL=\"\" -DPACKAGE=\"elkulator\" -DVERSION=\"1.0\" -DHAVE_LIBZ=1 -DHAVE_LIBOPENAL=1 -DHAVE_LIBALUT=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lalut -lopenal -lz 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/me/elkulator/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = elkulator
PACKAGE_BUGREPORT = Tom Walker <b-em@bbcmicro.com>
PACKAGE_NAME = Elkulator
PACKAGE_STRING = Elkulator 1.0
PACKAGE_TARNAME = elkulator
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0
abs_builddir = /home/me/elkulator/src
abs_srcdir = /home/me/elkulator/src
abs_top_builddir = /home/me/elkulator
abs_top_srcdir = /home/me/elkulator
ac_ct_CC = gcc
ac_ct_CXX = 
allegro_CFLAGS = -I/usr/include
allegro_LIBS = -L/usr/lib -Wl,-Bsymbolic-functions -lalleg-4.2.2
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/me/elkulator/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
noinst_SCRIPTS = ../elkulator
CLEANFILES = $(noinst_SCRIPTS)
elkulator_CFLAGS = $(allegro_CFLAGS)
elkulator_LDADD = $(allegro_LIBS) -lz -lopenal -lalut

# workaround for Win32 Allegro, which has `allegro-config' missing
#elkulator_LDADD = -lalleg -lz -lopenal -lalut
elkulator_SOURCES = 2xsai.c 1770.c 6502.c adc.c adf.c config.c csw.c ddnoise.c \
debugger.c disc.c fdi2raw.c fdi.c firstbyte.c linux.c linux-gui.c \
linux-keydefine.c main.c mem.c palfilt.c savestate.c scale2x.c sound.c soundopenal.c ssd.c \
tapenoise.c uef.c ula.c allegro_icon.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
elkulator$(EXEEXT): $(elkulator_OBJECTS) $(elkulator_DEPENDENCIES) 
	@rm -f elkulator$(EXEEXT)
	$(elkulator_LINK) $(elkulator_OBJECTS) $(elkulator_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/elkulator-1770.Po
include ./$(DEPDIR)/elkulator-2xsai.Po
include ./$(DEPDIR)/elkulator-6502.Po
include ./$(DEPDIR)/elkulator-adc.Po
include ./$(DEPDIR)/elkulator-adf.Po
include ./$(DEPDIR)/elkulator-allegro_icon.Po
include ./$(DEPDIR)/elkulator-config.Po
include ./$(DEPDIR)/elkulator-csw.Po
include ./$(DEPDIR)/elkulator-ddnoise.Po
include ./$(DEPDIR)/elkulator-debugger.Po
include ./$(DEPDIR)/elkulator-disc.Po
include ./$(DEPDIR)/elkulator-fdi.Po
include ./$(DEPDIR)/elkulator-fdi2raw.Po
include ./$(DEPDIR)/elkulator-firstbyte.Po
include ./$(DEPDIR)/elkulator-linux-gui.Po
include ./$(DEPDIR)/elkulator-linux-keydefine.Po
include ./$(DEPDIR)/elkulator-linux.Po
include ./$(DEPDIR)/elkulator-main.Po
include ./$(DEPDIR)/elkulator-mem.Po
include ./$(DEPDIR)/elkulator-palfilt.Po
include ./$(DEPDIR)/elkulator-savestate.Po
include ./$(DEPDIR)/elkulator-scale2x.Po
include ./$(DEPDIR)/elkulator-sound.Po
include ./$(DEPDIR)/elkulator-soundopenal.Po
include ./$(DEPDIR)/elkulator-ssd.Po
include ./$(DEPDIR)/elkulator-tapenoise.Po
include ./$(DEPDIR)/elkulator-uef.Po
include ./$(DEPDIR)/elkulator-ula.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

elkulator-2xsai.o: 2xsai.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-2xsai.o -MD -MP -MF $(DEPDIR)/elkulator-2xsai.Tpo -c -o elkulator-2xsai.o `test -f '2xsai.c' || echo '$(srcdir)/'`2xsai.c
	$(am__mv) $(DEPDIR)/elkulator-2xsai.Tpo $(DEPDIR)/elkulator-2xsai.Po
#	source='2xsai.c' object='elkulator-2xsai.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-2xsai.o `test -f '2xsai.c' || echo '$(srcdir)/'`2xsai.c

elkulator-2xsai.obj: 2xsai.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-2xsai.obj -MD -MP -MF $(DEPDIR)/elkulator-2xsai.Tpo -c -o elkulator-2xsai.obj `if test -f '2xsai.c'; then $(CYGPATH_W) '2xsai.c'; else $(CYGPATH_W) '$(srcdir)/2xsai.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-2xsai.Tpo $(DEPDIR)/elkulator-2xsai.Po
#	source='2xsai.c' object='elkulator-2xsai.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-2xsai.obj `if test -f '2xsai.c'; then $(CYGPATH_W) '2xsai.c'; else $(CYGPATH_W) '$(srcdir)/2xsai.c'; fi`

elkulator-1770.o: 1770.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-1770.o -MD -MP -MF $(DEPDIR)/elkulator-1770.Tpo -c -o elkulator-1770.o `test -f '1770.c' || echo '$(srcdir)/'`1770.c
	$(am__mv) $(DEPDIR)/elkulator-1770.Tpo $(DEPDIR)/elkulator-1770.Po
#	source='1770.c' object='elkulator-1770.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-1770.o `test -f '1770.c' || echo '$(srcdir)/'`1770.c

elkulator-1770.obj: 1770.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-1770.obj -MD -MP -MF $(DEPDIR)/elkulator-1770.Tpo -c -o elkulator-1770.obj `if test -f '1770.c'; then $(CYGPATH_W) '1770.c'; else $(CYGPATH_W) '$(srcdir)/1770.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-1770.Tpo $(DEPDIR)/elkulator-1770.Po
#	source='1770.c' object='elkulator-1770.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-1770.obj `if test -f '1770.c'; then $(CYGPATH_W) '1770.c'; else $(CYGPATH_W) '$(srcdir)/1770.c'; fi`

elkulator-6502.o: 6502.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-6502.o -MD -MP -MF $(DEPDIR)/elkulator-6502.Tpo -c -o elkulator-6502.o `test -f '6502.c' || echo '$(srcdir)/'`6502.c
	$(am__mv) $(DEPDIR)/elkulator-6502.Tpo $(DEPDIR)/elkulator-6502.Po
#	source='6502.c' object='elkulator-6502.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-6502.o `test -f '6502.c' || echo '$(srcdir)/'`6502.c

elkulator-6502.obj: 6502.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-6502.obj -MD -MP -MF $(DEPDIR)/elkulator-6502.Tpo -c -o elkulator-6502.obj `if test -f '6502.c'; then $(CYGPATH_W) '6502.c'; else $(CYGPATH_W) '$(srcdir)/6502.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-6502.Tpo $(DEPDIR)/elkulator-6502.Po
#	source='6502.c' object='elkulator-6502.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-6502.obj `if test -f '6502.c'; then $(CYGPATH_W) '6502.c'; else $(CYGPATH_W) '$(srcdir)/6502.c'; fi`

elkulator-adc.o: adc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-adc.o -MD -MP -MF $(DEPDIR)/elkulator-adc.Tpo -c -o elkulator-adc.o `test -f 'adc.c' || echo '$(srcdir)/'`adc.c
	$(am__mv) $(DEPDIR)/elkulator-adc.Tpo $(DEPDIR)/elkulator-adc.Po
#	source='adc.c' object='elkulator-adc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-adc.o `test -f 'adc.c' || echo '$(srcdir)/'`adc.c

elkulator-adc.obj: adc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-adc.obj -MD -MP -MF $(DEPDIR)/elkulator-adc.Tpo -c -o elkulator-adc.obj `if test -f 'adc.c'; then $(CYGPATH_W) 'adc.c'; else $(CYGPATH_W) '$(srcdir)/adc.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-adc.Tpo $(DEPDIR)/elkulator-adc.Po
#	source='adc.c' object='elkulator-adc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-adc.obj `if test -f 'adc.c'; then $(CYGPATH_W) 'adc.c'; else $(CYGPATH_W) '$(srcdir)/adc.c'; fi`

elkulator-adf.o: adf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-adf.o -MD -MP -MF $(DEPDIR)/elkulator-adf.Tpo -c -o elkulator-adf.o `test -f 'adf.c' || echo '$(srcdir)/'`adf.c
	$(am__mv) $(DEPDIR)/elkulator-adf.Tpo $(DEPDIR)/elkulator-adf.Po
#	source='adf.c' object='elkulator-adf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-adf.o `test -f 'adf.c' || echo '$(srcdir)/'`adf.c

elkulator-adf.obj: adf.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-adf.obj -MD -MP -MF $(DEPDIR)/elkulator-adf.Tpo -c -o elkulator-adf.obj `if test -f 'adf.c'; then $(CYGPATH_W) 'adf.c'; else $(CYGPATH_W) '$(srcdir)/adf.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-adf.Tpo $(DEPDIR)/elkulator-adf.Po
#	source='adf.c' object='elkulator-adf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-adf.obj `if test -f 'adf.c'; then $(CYGPATH_W) 'adf.c'; else $(CYGPATH_W) '$(srcdir)/adf.c'; fi`

elkulator-config.o: config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-config.o -MD -MP -MF $(DEPDIR)/elkulator-config.Tpo -c -o elkulator-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c
	$(am__mv) $(DEPDIR)/elkulator-config.Tpo $(DEPDIR)/elkulator-config.Po
#	source='config.c' object='elkulator-config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-config.o `test -f 'config.c' || echo '$(srcdir)/'`config.c

elkulator-config.obj: config.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-config.obj -MD -MP -MF $(DEPDIR)/elkulator-config.Tpo -c -o elkulator-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-config.Tpo $(DEPDIR)/elkulator-config.Po
#	source='config.c' object='elkulator-config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-config.obj `if test -f 'config.c'; then $(CYGPATH_W) 'config.c'; else $(CYGPATH_W) '$(srcdir)/config.c'; fi`

elkulator-csw.o: csw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-csw.o -MD -MP -MF $(DEPDIR)/elkulator-csw.Tpo -c -o elkulator-csw.o `test -f 'csw.c' || echo '$(srcdir)/'`csw.c
	$(am__mv) $(DEPDIR)/elkulator-csw.Tpo $(DEPDIR)/elkulator-csw.Po
#	source='csw.c' object='elkulator-csw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-csw.o `test -f 'csw.c' || echo '$(srcdir)/'`csw.c

elkulator-csw.obj: csw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-csw.obj -MD -MP -MF $(DEPDIR)/elkulator-csw.Tpo -c -o elkulator-csw.obj `if test -f 'csw.c'; then $(CYGPATH_W) 'csw.c'; else $(CYGPATH_W) '$(srcdir)/csw.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-csw.Tpo $(DEPDIR)/elkulator-csw.Po
#	source='csw.c' object='elkulator-csw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-csw.obj `if test -f 'csw.c'; then $(CYGPATH_W) 'csw.c'; else $(CYGPATH_W) '$(srcdir)/csw.c'; fi`

elkulator-ddnoise.o: ddnoise.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ddnoise.o -MD -MP -MF $(DEPDIR)/elkulator-ddnoise.Tpo -c -o elkulator-ddnoise.o `test -f 'ddnoise.c' || echo '$(srcdir)/'`ddnoise.c
	$(am__mv) $(DEPDIR)/elkulator-ddnoise.Tpo $(DEPDIR)/elkulator-ddnoise.Po
#	source='ddnoise.c' object='elkulator-ddnoise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ddnoise.o `test -f 'ddnoise.c' || echo '$(srcdir)/'`ddnoise.c

elkulator-ddnoise.obj: ddnoise.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ddnoise.obj -MD -MP -MF $(DEPDIR)/elkulator-ddnoise.Tpo -c -o elkulator-ddnoise.obj `if test -f 'ddnoise.c'; then $(CYGPATH_W) 'ddnoise.c'; else $(CYGPATH_W) '$(srcdir)/ddnoise.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-ddnoise.Tpo $(DEPDIR)/elkulator-ddnoise.Po
#	source='ddnoise.c' object='elkulator-ddnoise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ddnoise.obj `if test -f 'ddnoise.c'; then $(CYGPATH_W) 'ddnoise.c'; else $(CYGPATH_W) '$(srcdir)/ddnoise.c'; fi`

elkulator-debugger.o: debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-debugger.o -MD -MP -MF $(DEPDIR)/elkulator-debugger.Tpo -c -o elkulator-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c
	$(am__mv) $(DEPDIR)/elkulator-debugger.Tpo $(DEPDIR)/elkulator-debugger.Po
#	source='debugger.c' object='elkulator-debugger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-debugger.o `test -f 'debugger.c' || echo '$(srcdir)/'`debugger.c

elkulator-debugger.obj: debugger.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-debugger.obj -MD -MP -MF $(DEPDIR)/elkulator-debugger.Tpo -c -o elkulator-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-debugger.Tpo $(DEPDIR)/elkulator-debugger.Po
#	source='debugger.c' object='elkulator-debugger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-debugger.obj `if test -f 'debugger.c'; then $(CYGPATH_W) 'debugger.c'; else $(CYGPATH_W) '$(srcdir)/debugger.c'; fi`

elkulator-disc.o: disc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-disc.o -MD -MP -MF $(DEPDIR)/elkulator-disc.Tpo -c -o elkulator-disc.o `test -f 'disc.c' || echo '$(srcdir)/'`disc.c
	$(am__mv) $(DEPDIR)/elkulator-disc.Tpo $(DEPDIR)/elkulator-disc.Po
#	source='disc.c' object='elkulator-disc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-disc.o `test -f 'disc.c' || echo '$(srcdir)/'`disc.c

elkulator-disc.obj: disc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-disc.obj -MD -MP -MF $(DEPDIR)/elkulator-disc.Tpo -c -o elkulator-disc.obj `if test -f 'disc.c'; then $(CYGPATH_W) 'disc.c'; else $(CYGPATH_W) '$(srcdir)/disc.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-disc.Tpo $(DEPDIR)/elkulator-disc.Po
#	source='disc.c' object='elkulator-disc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-disc.obj `if test -f 'disc.c'; then $(CYGPATH_W) 'disc.c'; else $(CYGPATH_W) '$(srcdir)/disc.c'; fi`

elkulator-fdi2raw.o: fdi2raw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-fdi2raw.o -MD -MP -MF $(DEPDIR)/elkulator-fdi2raw.Tpo -c -o elkulator-fdi2raw.o `test -f 'fdi2raw.c' || echo '$(srcdir)/'`fdi2raw.c
	$(am__mv) $(DEPDIR)/elkulator-fdi2raw.Tpo $(DEPDIR)/elkulator-fdi2raw.Po
#	source='fdi2raw.c' object='elkulator-fdi2raw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-fdi2raw.o `test -f 'fdi2raw.c' || echo '$(srcdir)/'`fdi2raw.c

elkulator-fdi2raw.obj: fdi2raw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-fdi2raw.obj -MD -MP -MF $(DEPDIR)/elkulator-fdi2raw.Tpo -c -o elkulator-fdi2raw.obj `if test -f 'fdi2raw.c'; then $(CYGPATH_W) 'fdi2raw.c'; else $(CYGPATH_W) '$(srcdir)/fdi2raw.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-fdi2raw.Tpo $(DEPDIR)/elkulator-fdi2raw.Po
#	source='fdi2raw.c' object='elkulator-fdi2raw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-fdi2raw.obj `if test -f 'fdi2raw.c'; then $(CYGPATH_W) 'fdi2raw.c'; else $(CYGPATH_W) '$(srcdir)/fdi2raw.c'; fi`

elkulator-fdi.o: fdi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-fdi.o -MD -MP -MF $(DEPDIR)/elkulator-fdi.Tpo -c -o elkulator-fdi.o `test -f 'fdi.c' || echo '$(srcdir)/'`fdi.c
	$(am__mv) $(DEPDIR)/elkulator-fdi.Tpo $(DEPDIR)/elkulator-fdi.Po
#	source='fdi.c' object='elkulator-fdi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-fdi.o `test -f 'fdi.c' || echo '$(srcdir)/'`fdi.c

elkulator-fdi.obj: fdi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-fdi.obj -MD -MP -MF $(DEPDIR)/elkulator-fdi.Tpo -c -o elkulator-fdi.obj `if test -f 'fdi.c'; then $(CYGPATH_W) 'fdi.c'; else $(CYGPATH_W) '$(srcdir)/fdi.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-fdi.Tpo $(DEPDIR)/elkulator-fdi.Po
#	source='fdi.c' object='elkulator-fdi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-fdi.obj `if test -f 'fdi.c'; then $(CYGPATH_W) 'fdi.c'; else $(CYGPATH_W) '$(srcdir)/fdi.c'; fi`

elkulator-firstbyte.o: firstbyte.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-firstbyte.o -MD -MP -MF $(DEPDIR)/elkulator-firstbyte.Tpo -c -o elkulator-firstbyte.o `test -f 'firstbyte.c' || echo '$(srcdir)/'`firstbyte.c
	$(am__mv) $(DEPDIR)/elkulator-firstbyte.Tpo $(DEPDIR)/elkulator-firstbyte.Po
#	source='firstbyte.c' object='elkulator-firstbyte.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-firstbyte.o `test -f 'firstbyte.c' || echo '$(srcdir)/'`firstbyte.c

elkulator-firstbyte.obj: firstbyte.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-firstbyte.obj -MD -MP -MF $(DEPDIR)/elkulator-firstbyte.Tpo -c -o elkulator-firstbyte.obj `if test -f 'firstbyte.c'; then $(CYGPATH_W) 'firstbyte.c'; else $(CYGPATH_W) '$(srcdir)/firstbyte.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-firstbyte.Tpo $(DEPDIR)/elkulator-firstbyte.Po
#	source='firstbyte.c' object='elkulator-firstbyte.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-firstbyte.obj `if test -f 'firstbyte.c'; then $(CYGPATH_W) 'firstbyte.c'; else $(CYGPATH_W) '$(srcdir)/firstbyte.c'; fi`

elkulator-linux.o: linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux.o -MD -MP -MF $(DEPDIR)/elkulator-linux.Tpo -c -o elkulator-linux.o `test -f 'linux.c' || echo '$(srcdir)/'`linux.c
	$(am__mv) $(DEPDIR)/elkulator-linux.Tpo $(DEPDIR)/elkulator-linux.Po
#	source='linux.c' object='elkulator-linux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux.o `test -f 'linux.c' || echo '$(srcdir)/'`linux.c

elkulator-linux.obj: linux.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux.obj -MD -MP -MF $(DEPDIR)/elkulator-linux.Tpo -c -o elkulator-linux.obj `if test -f 'linux.c'; then $(CYGPATH_W) 'linux.c'; else $(CYGPATH_W) '$(srcdir)/linux.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-linux.Tpo $(DEPDIR)/elkulator-linux.Po
#	source='linux.c' object='elkulator-linux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux.obj `if test -f 'linux.c'; then $(CYGPATH_W) 'linux.c'; else $(CYGPATH_W) '$(srcdir)/linux.c'; fi`

elkulator-linux-gui.o: linux-gui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux-gui.o -MD -MP -MF $(DEPDIR)/elkulator-linux-gui.Tpo -c -o elkulator-linux-gui.o `test -f 'linux-gui.c' || echo '$(srcdir)/'`linux-gui.c
	$(am__mv) $(DEPDIR)/elkulator-linux-gui.Tpo $(DEPDIR)/elkulator-linux-gui.Po
#	source='linux-gui.c' object='elkulator-linux-gui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux-gui.o `test -f 'linux-gui.c' || echo '$(srcdir)/'`linux-gui.c

elkulator-linux-gui.obj: linux-gui.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux-gui.obj -MD -MP -MF $(DEPDIR)/elkulator-linux-gui.Tpo -c -o elkulator-linux-gui.obj `if test -f 'linux-gui.c'; then $(CYGPATH_W) 'linux-gui.c'; else $(CYGPATH_W) '$(srcdir)/linux-gui.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-linux-gui.Tpo $(DEPDIR)/elkulator-linux-gui.Po
#	source='linux-gui.c' object='elkulator-linux-gui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux-gui.obj `if test -f 'linux-gui.c'; then $(CYGPATH_W) 'linux-gui.c'; else $(CYGPATH_W) '$(srcdir)/linux-gui.c'; fi`

elkulator-linux-keydefine.o: linux-keydefine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux-keydefine.o -MD -MP -MF $(DEPDIR)/elkulator-linux-keydefine.Tpo -c -o elkulator-linux-keydefine.o `test -f 'linux-keydefine.c' || echo '$(srcdir)/'`linux-keydefine.c
	$(am__mv) $(DEPDIR)/elkulator-linux-keydefine.Tpo $(DEPDIR)/elkulator-linux-keydefine.Po
#	source='linux-keydefine.c' object='elkulator-linux-keydefine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux-keydefine.o `test -f 'linux-keydefine.c' || echo '$(srcdir)/'`linux-keydefine.c

elkulator-linux-keydefine.obj: linux-keydefine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-linux-keydefine.obj -MD -MP -MF $(DEPDIR)/elkulator-linux-keydefine.Tpo -c -o elkulator-linux-keydefine.obj `if test -f 'linux-keydefine.c'; then $(CYGPATH_W) 'linux-keydefine.c'; else $(CYGPATH_W) '$(srcdir)/linux-keydefine.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-linux-keydefine.Tpo $(DEPDIR)/elkulator-linux-keydefine.Po
#	source='linux-keydefine.c' object='elkulator-linux-keydefine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-linux-keydefine.obj `if test -f 'linux-keydefine.c'; then $(CYGPATH_W) 'linux-keydefine.c'; else $(CYGPATH_W) '$(srcdir)/linux-keydefine.c'; fi`

elkulator-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-main.o -MD -MP -MF $(DEPDIR)/elkulator-main.Tpo -c -o elkulator-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/elkulator-main.Tpo $(DEPDIR)/elkulator-main.Po
#	source='main.c' object='elkulator-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

elkulator-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-main.obj -MD -MP -MF $(DEPDIR)/elkulator-main.Tpo -c -o elkulator-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-main.Tpo $(DEPDIR)/elkulator-main.Po
#	source='main.c' object='elkulator-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

elkulator-mem.o: mem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-mem.o -MD -MP -MF $(DEPDIR)/elkulator-mem.Tpo -c -o elkulator-mem.o `test -f 'mem.c' || echo '$(srcdir)/'`mem.c
	$(am__mv) $(DEPDIR)/elkulator-mem.Tpo $(DEPDIR)/elkulator-mem.Po
#	source='mem.c' object='elkulator-mem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-mem.o `test -f 'mem.c' || echo '$(srcdir)/'`mem.c

elkulator-mem.obj: mem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-mem.obj -MD -MP -MF $(DEPDIR)/elkulator-mem.Tpo -c -o elkulator-mem.obj `if test -f 'mem.c'; then $(CYGPATH_W) 'mem.c'; else $(CYGPATH_W) '$(srcdir)/mem.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-mem.Tpo $(DEPDIR)/elkulator-mem.Po
#	source='mem.c' object='elkulator-mem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-mem.obj `if test -f 'mem.c'; then $(CYGPATH_W) 'mem.c'; else $(CYGPATH_W) '$(srcdir)/mem.c'; fi`

elkulator-palfilt.o: palfilt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-palfilt.o -MD -MP -MF $(DEPDIR)/elkulator-palfilt.Tpo -c -o elkulator-palfilt.o `test -f 'palfilt.c' || echo '$(srcdir)/'`palfilt.c
	$(am__mv) $(DEPDIR)/elkulator-palfilt.Tpo $(DEPDIR)/elkulator-palfilt.Po
#	source='palfilt.c' object='elkulator-palfilt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-palfilt.o `test -f 'palfilt.c' || echo '$(srcdir)/'`palfilt.c

elkulator-palfilt.obj: palfilt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-palfilt.obj -MD -MP -MF $(DEPDIR)/elkulator-palfilt.Tpo -c -o elkulator-palfilt.obj `if test -f 'palfilt.c'; then $(CYGPATH_W) 'palfilt.c'; else $(CYGPATH_W) '$(srcdir)/palfilt.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-palfilt.Tpo $(DEPDIR)/elkulator-palfilt.Po
#	source='palfilt.c' object='elkulator-palfilt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-palfilt.obj `if test -f 'palfilt.c'; then $(CYGPATH_W) 'palfilt.c'; else $(CYGPATH_W) '$(srcdir)/palfilt.c'; fi`

elkulator-savestate.o: savestate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-savestate.o -MD -MP -MF $(DEPDIR)/elkulator-savestate.Tpo -c -o elkulator-savestate.o `test -f 'savestate.c' || echo '$(srcdir)/'`savestate.c
	$(am__mv) $(DEPDIR)/elkulator-savestate.Tpo $(DEPDIR)/elkulator-savestate.Po
#	source='savestate.c' object='elkulator-savestate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-savestate.o `test -f 'savestate.c' || echo '$(srcdir)/'`savestate.c

elkulator-savestate.obj: savestate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-savestate.obj -MD -MP -MF $(DEPDIR)/elkulator-savestate.Tpo -c -o elkulator-savestate.obj `if test -f 'savestate.c'; then $(CYGPATH_W) 'savestate.c'; else $(CYGPATH_W) '$(srcdir)/savestate.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-savestate.Tpo $(DEPDIR)/elkulator-savestate.Po
#	source='savestate.c' object='elkulator-savestate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-savestate.obj `if test -f 'savestate.c'; then $(CYGPATH_W) 'savestate.c'; else $(CYGPATH_W) '$(srcdir)/savestate.c'; fi`

elkulator-scale2x.o: scale2x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-scale2x.o -MD -MP -MF $(DEPDIR)/elkulator-scale2x.Tpo -c -o elkulator-scale2x.o `test -f 'scale2x.c' || echo '$(srcdir)/'`scale2x.c
	$(am__mv) $(DEPDIR)/elkulator-scale2x.Tpo $(DEPDIR)/elkulator-scale2x.Po
#	source='scale2x.c' object='elkulator-scale2x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-scale2x.o `test -f 'scale2x.c' || echo '$(srcdir)/'`scale2x.c

elkulator-scale2x.obj: scale2x.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-scale2x.obj -MD -MP -MF $(DEPDIR)/elkulator-scale2x.Tpo -c -o elkulator-scale2x.obj `if test -f 'scale2x.c'; then $(CYGPATH_W) 'scale2x.c'; else $(CYGPATH_W) '$(srcdir)/scale2x.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-scale2x.Tpo $(DEPDIR)/elkulator-scale2x.Po
#	source='scale2x.c' object='elkulator-scale2x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-scale2x.obj `if test -f 'scale2x.c'; then $(CYGPATH_W) 'scale2x.c'; else $(CYGPATH_W) '$(srcdir)/scale2x.c'; fi`

elkulator-sound.o: sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-sound.o -MD -MP -MF $(DEPDIR)/elkulator-sound.Tpo -c -o elkulator-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c
	$(am__mv) $(DEPDIR)/elkulator-sound.Tpo $(DEPDIR)/elkulator-sound.Po
#	source='sound.c' object='elkulator-sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

elkulator-sound.obj: sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-sound.obj -MD -MP -MF $(DEPDIR)/elkulator-sound.Tpo -c -o elkulator-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-sound.Tpo $(DEPDIR)/elkulator-sound.Po
#	source='sound.c' object='elkulator-sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`

elkulator-soundopenal.o: soundopenal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-soundopenal.o -MD -MP -MF $(DEPDIR)/elkulator-soundopenal.Tpo -c -o elkulator-soundopenal.o `test -f 'soundopenal.c' || echo '$(srcdir)/'`soundopenal.c
	$(am__mv) $(DEPDIR)/elkulator-soundopenal.Tpo $(DEPDIR)/elkulator-soundopenal.Po
#	source='soundopenal.c' object='elkulator-soundopenal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-soundopenal.o `test -f 'soundopenal.c' || echo '$(srcdir)/'`soundopenal.c

elkulator-soundopenal.obj: soundopenal.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-soundopenal.obj -MD -MP -MF $(DEPDIR)/elkulator-soundopenal.Tpo -c -o elkulator-soundopenal.obj `if test -f 'soundopenal.c'; then $(CYGPATH_W) 'soundopenal.c'; else $(CYGPATH_W) '$(srcdir)/soundopenal.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-soundopenal.Tpo $(DEPDIR)/elkulator-soundopenal.Po
#	source='soundopenal.c' object='elkulator-soundopenal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-soundopenal.obj `if test -f 'soundopenal.c'; then $(CYGPATH_W) 'soundopenal.c'; else $(CYGPATH_W) '$(srcdir)/soundopenal.c'; fi`

elkulator-ssd.o: ssd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ssd.o -MD -MP -MF $(DEPDIR)/elkulator-ssd.Tpo -c -o elkulator-ssd.o `test -f 'ssd.c' || echo '$(srcdir)/'`ssd.c
	$(am__mv) $(DEPDIR)/elkulator-ssd.Tpo $(DEPDIR)/elkulator-ssd.Po
#	source='ssd.c' object='elkulator-ssd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ssd.o `test -f 'ssd.c' || echo '$(srcdir)/'`ssd.c

elkulator-ssd.obj: ssd.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ssd.obj -MD -MP -MF $(DEPDIR)/elkulator-ssd.Tpo -c -o elkulator-ssd.obj `if test -f 'ssd.c'; then $(CYGPATH_W) 'ssd.c'; else $(CYGPATH_W) '$(srcdir)/ssd.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-ssd.Tpo $(DEPDIR)/elkulator-ssd.Po
#	source='ssd.c' object='elkulator-ssd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ssd.obj `if test -f 'ssd.c'; then $(CYGPATH_W) 'ssd.c'; else $(CYGPATH_W) '$(srcdir)/ssd.c'; fi`

elkulator-tapenoise.o: tapenoise.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-tapenoise.o -MD -MP -MF $(DEPDIR)/elkulator-tapenoise.Tpo -c -o elkulator-tapenoise.o `test -f 'tapenoise.c' || echo '$(srcdir)/'`tapenoise.c
	$(am__mv) $(DEPDIR)/elkulator-tapenoise.Tpo $(DEPDIR)/elkulator-tapenoise.Po
#	source='tapenoise.c' object='elkulator-tapenoise.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-tapenoise.o `test -f 'tapenoise.c' || echo '$(srcdir)/'`tapenoise.c

elkulator-tapenoise.obj: tapenoise.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-tapenoise.obj -MD -MP -MF $(DEPDIR)/elkulator-tapenoise.Tpo -c -o elkulator-tapenoise.obj `if test -f 'tapenoise.c'; then $(CYGPATH_W) 'tapenoise.c'; else $(CYGPATH_W) '$(srcdir)/tapenoise.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-tapenoise.Tpo $(DEPDIR)/elkulator-tapenoise.Po
#	source='tapenoise.c' object='elkulator-tapenoise.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-tapenoise.obj `if test -f 'tapenoise.c'; then $(CYGPATH_W) 'tapenoise.c'; else $(CYGPATH_W) '$(srcdir)/tapenoise.c'; fi`

elkulator-uef.o: uef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-uef.o -MD -MP -MF $(DEPDIR)/elkulator-uef.Tpo -c -o elkulator-uef.o `test -f 'uef.c' || echo '$(srcdir)/'`uef.c
	$(am__mv) $(DEPDIR)/elkulator-uef.Tpo $(DEPDIR)/elkulator-uef.Po
#	source='uef.c' object='elkulator-uef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-uef.o `test -f 'uef.c' || echo '$(srcdir)/'`uef.c

elkulator-uef.obj: uef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-uef.obj -MD -MP -MF $(DEPDIR)/elkulator-uef.Tpo -c -o elkulator-uef.obj `if test -f 'uef.c'; then $(CYGPATH_W) 'uef.c'; else $(CYGPATH_W) '$(srcdir)/uef.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-uef.Tpo $(DEPDIR)/elkulator-uef.Po
#	source='uef.c' object='elkulator-uef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-uef.obj `if test -f 'uef.c'; then $(CYGPATH_W) 'uef.c'; else $(CYGPATH_W) '$(srcdir)/uef.c'; fi`

elkulator-ula.o: ula.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ula.o -MD -MP -MF $(DEPDIR)/elkulator-ula.Tpo -c -o elkulator-ula.o `test -f 'ula.c' || echo '$(srcdir)/'`ula.c
	$(am__mv) $(DEPDIR)/elkulator-ula.Tpo $(DEPDIR)/elkulator-ula.Po
#	source='ula.c' object='elkulator-ula.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ula.o `test -f 'ula.c' || echo '$(srcdir)/'`ula.c

elkulator-ula.obj: ula.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-ula.obj -MD -MP -MF $(DEPDIR)/elkulator-ula.Tpo -c -o elkulator-ula.obj `if test -f 'ula.c'; then $(CYGPATH_W) 'ula.c'; else $(CYGPATH_W) '$(srcdir)/ula.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-ula.Tpo $(DEPDIR)/elkulator-ula.Po
#	source='ula.c' object='elkulator-ula.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-ula.obj `if test -f 'ula.c'; then $(CYGPATH_W) 'ula.c'; else $(CYGPATH_W) '$(srcdir)/ula.c'; fi`

elkulator-allegro_icon.o: allegro_icon.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-allegro_icon.o -MD -MP -MF $(DEPDIR)/elkulator-allegro_icon.Tpo -c -o elkulator-allegro_icon.o `test -f 'allegro_icon.c' || echo '$(srcdir)/'`allegro_icon.c
	$(am__mv) $(DEPDIR)/elkulator-allegro_icon.Tpo $(DEPDIR)/elkulator-allegro_icon.Po
#	source='allegro_icon.c' object='elkulator-allegro_icon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-allegro_icon.o `test -f 'allegro_icon.c' || echo '$(srcdir)/'`allegro_icon.c

elkulator-allegro_icon.obj: allegro_icon.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -MT elkulator-allegro_icon.obj -MD -MP -MF $(DEPDIR)/elkulator-allegro_icon.Tpo -c -o elkulator-allegro_icon.obj `if test -f 'allegro_icon.c'; then $(CYGPATH_W) 'allegro_icon.c'; else $(CYGPATH_W) '$(srcdir)/allegro_icon.c'; fi`
	$(am__mv) $(DEPDIR)/elkulator-allegro_icon.Tpo $(DEPDIR)/elkulator-allegro_icon.Po
#	source='allegro_icon.c' object='elkulator-allegro_icon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elkulator_CFLAGS) $(CFLAGS) -c -o elkulator-allegro_icon.obj `if test -f 'allegro_icon.c'; then $(CYGPATH_W) 'allegro_icon.c'; else $(CYGPATH_W) '$(srcdir)/allegro_icon.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


../elkulator: elkulator
	cp elkulator ..

amrefresh:	

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
